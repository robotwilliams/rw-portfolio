{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/PixelIcon.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\n\n/**\n * PixelIcon Component Props\n *\n * Defines the props for the PixelIcon component which renders\n * custom minimal retro-style icons for the desktop interface.\n */\ninterface PixelIconProps {\n  icon: string; // The icon identifier (emoji or custom type)\n  size: number; // The size of the icon in pixels\n}\n\n/**\n * PixelIcon Component\n *\n * This component renders authentic RobotOS pixel art icons for the\n * desktop interface. It creates pixel-perfect replicas of classic\n * retro icons with authentic colors and details.\n *\n * Features:\n * - Authentic RobotOS pixel art designs\n * - Pixel-perfect replicas from 98.js.org\n * - Authentic retro color palette\n * - Click animation feedback\n * - Subtle hover effects with transparent white selection\n * - Scalable sizing with pixelated rendering\n * - Support for desktop icons, window icons, and project icons\n * - Custom project-specific icons for different project types\n */\nexport default function PixelIcon({ icon, size }: PixelIconProps) {\n  // State for click animation feedback\n  const [isClicked, setIsClicked] = useState(false);\n\n  /**\n   * Handle Click Animation\n   *\n   * Provides visual feedback when the icon is clicked by\n   * temporarily scaling it down and then back up.\n   */\n  const handleClick = () => {\n    setIsClicked(true);\n    setTimeout(() => setIsClicked(false), 150);\n  };\n\n  /**\n   * Icon Styles\n   *\n   * Base styles for all icons including size, animation,\n   * and clean rendering.\n   */\n  const iconStyles = {\n    width: `${size}px`,\n    height: `${size}px`,\n    transform: isClicked ? \"scale(0.95)\" : \"scale(1)\",\n    transition: \"transform 0.15s ease\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    imageRendering: \"pixelated\" as const,\n  };\n\n  /**\n   * Get Icon Content\n   *\n   * Returns the appropriate icon content based on the icon prop.\n   * Each icon type has its own custom minimal design.\n   */\n  const getIconContent = () => {\n    switch (icon) {\n      case \"üë§\":\n        // Windows 98 User icon - exact replica from 98.js.org\n        return (\n          <div style={iconStyles}>\n            <svg\n              width={size}\n              height={size}\n              viewBox=\"0 0 32 28\"\n              style={{ imageRendering: \"pixelated\" }}\n            >\n              {/* Head */}\n              <rect\n                x=\"12\"\n                y=\"4\"\n                width=\"8\"\n                height=\"8\"\n                fill=\"#ffdbac\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Body */}\n              <rect\n                x=\"10\"\n                y=\"12\"\n                width=\"12\"\n                height=\"12\"\n                fill=\"#000080\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Arms */}\n              <rect\n                x=\"6\"\n                y=\"14\"\n                width=\"4\"\n                height=\"8\"\n                fill=\"#000080\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              <rect\n                x=\"22\"\n                y=\"14\"\n                width=\"4\"\n                height=\"8\"\n                fill=\"#000080\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Eyes */}\n              <rect x=\"13\" y=\"6\" width=\"2\" height=\"2\" fill=\"#000000\" />\n              <rect x=\"17\" y=\"6\" width=\"2\" height=\"2\" fill=\"#000000\" />\n              {/* Mouth */}\n              <rect x=\"14\" y=\"9\" width=\"4\" height=\"1\" fill=\"#000000\" />\n            </svg>\n          </div>\n        );\n\n      case \"üíº\":\n        // Windows 98 Briefcase icon - exact replica from 98.js.org\n        return (\n          <div style={iconStyles}>\n            <svg\n              width={size}\n              height={size}\n              viewBox=\"0 0 32 28\"\n              style={{ imageRendering: \"pixelated\" }}\n            >\n              {/* Main case */}\n              <rect\n                x=\"6\"\n                y=\"10\"\n                width=\"20\"\n                height=\"14\"\n                fill=\"#808080\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Handle */}\n              <rect\n                x=\"12\"\n                y=\"8\"\n                width=\"8\"\n                height=\"4\"\n                fill=\"#c0c0c0\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Lock */}\n              <rect\n                x=\"14\"\n                y=\"16\"\n                width=\"4\"\n                height=\"6\"\n                fill=\"#ffff00\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Lock detail */}\n              <rect x=\"15\" y=\"18\" width=\"2\" height=\"2\" fill=\"#000000\" />\n              {/* Case details */}\n              <rect x=\"8\" y=\"12\" width=\"16\" height=\"1\" fill=\"#000000\" />\n              <rect x=\"8\" y=\"14\" width=\"16\" height=\"1\" fill=\"#000000\" />\n            </svg>\n          </div>\n        );\n\n      case \"üìß\":\n        // Windows 98 Mail icon - exact replica from 98.js.org\n        return (\n          <div style={iconStyles}>\n            <svg\n              width={size}\n              height={size}\n              viewBox=\"0 0 32 28\"\n              style={{ imageRendering: \"pixelated\" }}\n            >\n              {/* Envelope body */}\n              <rect\n                x=\"8\"\n                y=\"12\"\n                width=\"16\"\n                height=\"12\"\n                fill=\"#ffffff\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Flap */}\n              <polygon\n                points=\"8,12 16,6 24,12\"\n                fill=\"#ffffff\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Seal */}\n              <rect\n                x=\"14\"\n                y=\"18\"\n                width=\"4\"\n                height=\"4\"\n                fill=\"#ffff00\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n              />\n              {/* Seal detail */}\n              <rect x=\"15\" y=\"20\" width=\"2\" height=\"1\" fill=\"#000000\" />\n              {/* Envelope lines */}\n              <rect x=\"10\" y=\"14\" width=\"12\" height=\"1\" fill=\"#000000\" />\n              <rect x=\"10\" y=\"16\" width=\"12\" height=\"1\" fill=\"#000000\" />\n            </svg>\n          </div>\n        );\n\n      case \"üìÅ\":\n      case \"folder\":\n        // Use the rw-site-icon-folder-close.png image\n        return (\n          <div style={{ ...iconStyles, overflow: \"visible\" }}>\n            <Image\n              src=\"/images/rw-site-icon-folder-close.png\"\n              alt=\"Folder\"\n              width={size}\n              height={size}\n              style={{\n                imageRendering: \"pixelated\",\n                display: \"block\",\n                maxWidth: \"none\",\n                maxHeight: \"none\",\n              }}\n            />\n          </div>\n        );\n\n      default:\n        // Fallback for any other icon - displays the emoji as-is\n        return <div style={iconStyles}>{icon}</div>;\n    }\n  };\n\n  return (\n    <div\n      className=\"pixel-icon-container\"\n      onClick={handleClick}\n      style={{\n        cursor: \"pointer\",\n        transition: \"transform 0.2s ease\",\n      }}\n    >\n      {getIconContent()}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAiCe,SAAS,UAAU,EAAE,IAAI,EAAE,IAAI,EAAkB;IAC9D,qCAAqC;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C;;;;;GAKC,GACD,MAAM,cAAc;QAClB,aAAa;QACb,WAAW,IAAM,aAAa,QAAQ;IACxC;IAEA;;;;;GAKC,GACD,MAAM,aAAa;QACjB,OAAO,GAAG,KAAK,EAAE,CAAC;QAClB,QAAQ,GAAG,KAAK,EAAE,CAAC;QACnB,WAAW,YAAY,gBAAgB;QACvC,YAAY;QACZ,SAAS;QACT,YAAY;QACZ,gBAAgB;QAChB,gBAAgB;IAClB;IAEA;;;;;GAKC,GACD,MAAM,iBAAiB;QACrB,OAAQ;YACN,KAAK;gBACH,sDAAsD;gBACtD,qBACE,8OAAC;oBAAI,OAAO;8BACV,cAAA,8OAAC;wBACC,OAAO;wBACP,QAAQ;wBACR,SAAQ;wBACR,OAAO;4BAAE,gBAAgB;wBAAY;;0CAGrC,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAEd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAI,OAAM;gCAAI,QAAO;gCAAI,MAAK;;;;;;0CAC7C,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAI,OAAM;gCAAI,QAAO;gCAAI,MAAK;;;;;;0CAE7C,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAI,OAAM;gCAAI,QAAO;gCAAI,MAAK;;;;;;;;;;;;;;;;;YAKrD,KAAK;gBACH,2DAA2D;gBAC3D,qBACE,8OAAC;oBAAI,OAAO;8BACV,cAAA,8OAAC;wBACC,OAAO;wBACP,QAAQ;wBACR,SAAQ;wBACR,OAAO;4BAAE,gBAAgB;wBAAY;;0CAGrC,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAK,OAAM;gCAAI,QAAO;gCAAI,MAAK;;;;;;0CAE9C,8OAAC;gCAAK,GAAE;gCAAI,GAAE;gCAAK,OAAM;gCAAK,QAAO;gCAAI,MAAK;;;;;;0CAC9C,8OAAC;gCAAK,GAAE;gCAAI,GAAE;gCAAK,OAAM;gCAAK,QAAO;gCAAI,MAAK;;;;;;;;;;;;;;;;;YAKtD,KAAK;gBACH,sDAAsD;gBACtD,qBACE,8OAAC;oBAAI,OAAO;8BACV,cAAA,8OAAC;wBACC,OAAO;wBACP,QAAQ;wBACR,SAAQ;wBACR,OAAO;4BAAE,gBAAgB;wBAAY;;0CAGrC,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCACC,GAAE;gCACF,GAAE;gCACF,OAAM;gCACN,QAAO;gCACP,MAAK;gCACL,QAAO;gCACP,aAAY;;;;;;0CAGd,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAK,OAAM;gCAAI,QAAO;gCAAI,MAAK;;;;;;0CAE9C,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAK,OAAM;gCAAK,QAAO;gCAAI,MAAK;;;;;;0CAC/C,8OAAC;gCAAK,GAAE;gCAAK,GAAE;gCAAK,OAAM;gCAAK,QAAO;gCAAI,MAAK;;;;;;;;;;;;;;;;;YAKvD,KAAK;YACL,KAAK;gBACH,8CAA8C;gBAC9C,qBACE,8OAAC;oBAAI,OAAO;wBAAE,GAAG,UAAU;wBAAE,UAAU;oBAAU;8BAC/C,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,OAAO;4BACL,gBAAgB;4BAChB,SAAS;4BACT,UAAU;4BACV,WAAW;wBACb;;;;;;;;;;;YAKR;gBACE,yDAAyD;gBACzD,qBAAO,8OAAC;oBAAI,OAAO;8BAAa;;;;;;QACpC;IACF;IAEA,qBACE,8OAAC;QACC,WAAU;QACV,SAAS;QACT,OAAO;YACL,QAAQ;YACR,YAAY;QACd;kBAEC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/ProjectWindow.tsx"],"sourcesContent":["/**\n * ProjectWindow Component\n *\n * A draggable RobotOS-style window that displays detailed project information.\n * This component is used within the work page to show individual project details\n * when users click on project icons in the main work grid.\n *\n * Features:\n * - Authentic RobotOS window styling with title bar and controls\n * - Draggable window that can be moved around the screen\n * - Window activation and z-index management\n * - Project content rendering with markdown-to-HTML conversion\n * - Project metadata display (client, duration, date, technologies)\n * - Live site and GitHub links when available\n * - Gallery display for project images\n * - Close button to dismiss the window\n *\n * The window integrates with the parent component's window management system\n * to ensure only one project window is open at a time and proper window\n * stacking behavior.\n */\n\nimport { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PixelIcon from \"./PixelIcon\";\n\ninterface ProjectWindowProps {\n  project: {\n    slug: string;\n    title: string;\n    description: string;\n    client: string;\n    duration: string;\n    date: string;\n    category: string;\n    technologies: string[];\n    live_url?: string;\n    github_url?: string;\n    gallery?: string[];\n    content: string;\n    featured?: boolean;\n  };\n  onClose: () => void;\n  isActive?: boolean;\n  onActivate?: () => void;\n  position?: { x: number; y: number };\n  onMove?: (x: number, y: number) => void;\n}\n\nexport default function ProjectWindow({\n  project,\n  onClose,\n  isActive = false,\n  onActivate,\n  position: externalPosition,\n  onMove,\n}: ProjectWindowProps) {\n  const [htmlContent, setHtmlContent] = useState<string>(\"\");\n  const [mounted, setMounted] = useState(false);\n  const [position, setPosition] = useState(() => {\n    // Use external position if provided, otherwise calculate default\n    if (externalPosition) {\n      return externalPosition;\n    }\n\n    // Use exact same size and positioning as work window\n    const getResponsiveWindowSize = () => {\n      const screenWidth = window.innerWidth;\n\n      const baseWidth = 850;\n      const baseHeight = 550; // Reduced from 650 to 550\n\n      if (screenWidth < 1200) {\n        const scale = Math.max(0.4, screenWidth / 1200);\n        return {\n          width: Math.floor(baseWidth * scale),\n          height: Math.floor(baseHeight * scale),\n        };\n      }\n\n      // Scale up on extra large screens\n      if (screenWidth >= 1400) {\n        const scale = Math.min(1.4, screenWidth / 1400);\n        return {\n          width: Math.floor(baseWidth * scale),\n          height: Math.floor(baseHeight * scale),\n        };\n      }\n      return { width: baseWidth, height: baseHeight };\n    };\n\n    const windowSize = getResponsiveWindowSize();\n    const cascadeOffset = 35;\n\n    // Start higher up for the first window, then cascade\n    const baseX = Math.max(0, (window.innerWidth - windowSize.width) / 2);\n    const baseY =\n      Math.max(0, (window.innerHeight - windowSize.height) / 2) - 50;\n\n    const x = baseX + cascadeOffset;\n    const y = baseY + cascadeOffset;\n\n    // Ensure window doesn't go off-screen (leave space for taskbar)\n    const maxX = Math.max(0, window.innerWidth - windowSize.width - 20);\n    const maxY = Math.max(0, window.innerHeight - windowSize.height - 80); // Taskbar height is ~52px, so leave 80px margin\n\n    return {\n      x: Math.min(Math.max(0, x), maxX),\n      y: Math.min(Math.max(0, y), maxY),\n    };\n  });\n\n  const [windowSize, setWindowSize] = useState(() => {\n    const screenWidth = window.innerWidth;\n    const baseWidth = 850;\n    const baseHeight = 550; // Reduced from 650 to 550\n\n    if (screenWidth < 1200) {\n      const scale = Math.max(0.7, screenWidth / 1200);\n      return {\n        width: Math.floor(baseWidth * scale),\n        height: Math.floor(baseHeight * scale),\n      };\n    }\n    return { width: baseWidth, height: baseHeight };\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, width: 0, height: 0 });\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // Handle window resize to keep window responsive\n  useEffect(() => {\n    const handleWindowResize = () => {\n      const getResponsiveWindowSize = () => {\n        const screenWidth = window.innerWidth;\n        const baseWidth = 850;\n        const baseHeight = 550; // Reduced from 600 to 550\n\n        if (screenWidth < 1200) {\n          const scale = Math.max(0.4, screenWidth / 1200);\n          return {\n            width: Math.floor(baseWidth * scale),\n            height: Math.floor(baseHeight * scale),\n          };\n        }\n\n        // Scale up on extra large screens\n        if (screenWidth >= 1400) {\n          const scale = Math.min(1.4, screenWidth / 1400);\n          return {\n            width: Math.floor(baseWidth * scale),\n            height: Math.floor(baseHeight * scale),\n          };\n        }\n        return { width: baseWidth, height: baseHeight };\n      };\n\n      const newWindowSize = getResponsiveWindowSize();\n      setWindowSize(newWindowSize);\n\n      // Maintain cascading position while scaling\n      const cascadeOffset = 35;\n      const baseX = Math.max(0, (window.innerWidth - newWindowSize.width) / 2);\n      const baseY =\n        Math.max(0, (window.innerHeight - newWindowSize.height) / 2) - 50;\n\n      const x = baseX + cascadeOffset;\n      const y = baseY + cascadeOffset;\n\n      // Ensure window doesn't go off-screen with proper margins (leave space for taskbar)\n      const maxX = Math.max(0, window.innerWidth - newWindowSize.width - 20);\n      const maxY = Math.max(0, window.innerHeight - newWindowSize.height - 80); // Taskbar height is ~52px, so leave 80px margin\n\n      setPosition({\n        x: Math.min(Math.max(0, x), maxX),\n        y: Math.min(Math.max(0, y), maxY),\n      });\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (isDragging) {\n        const newX = e.clientX - dragOffset.x;\n        const newY = e.clientY - dragOffset.y;\n\n        // Constrain to viewport bounds (leave space for taskbar)\n        const maxX = Math.max(0, window.innerWidth - windowSize.width - 20);\n        const maxY = Math.max(0, window.innerHeight - windowSize.height - 80); // Taskbar height is ~52px, so leave 80px margin\n\n        const constrainedPosition = {\n          x: Math.min(Math.max(0, newX), maxX),\n          y: Math.min(Math.max(0, newY), maxY),\n        };\n\n        setPosition(constrainedPosition);\n        if (onMove) {\n          onMove(constrainedPosition.x, constrainedPosition.y);\n        }\n      } else if (isResizing) {\n        const deltaX = e.clientX - resizeStart.x;\n        const deltaY = e.clientY - resizeStart.y;\n\n        const minWidth = 400;\n        const minHeight = 300;\n        const newWidth = Math.max(minWidth, resizeStart.width + deltaX);\n        const newHeight = Math.max(minHeight, resizeStart.height + deltaY);\n\n        // Constrain maximum size to viewport (leave space for taskbar)\n        const maxWidth = window.innerWidth - 40;\n        const maxHeight = window.innerHeight - 100; // Taskbar height is ~52px, so leave 100px margin\n\n        const constrainedWidth = Math.min(newWidth, maxWidth);\n        const constrainedHeight = Math.min(newHeight, maxHeight);\n\n        setWindowSize({ width: constrainedWidth, height: constrainedHeight });\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n      setIsResizing(false);\n    };\n\n    if (isDragging || isResizing) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging, dragOffset, isResizing, resizeStart]);\n\n  useEffect(() => {\n    const convertMarkdown = async () => {\n      try {\n        const response = await fetch(\"/api/content/markdown\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ markdown: project.content }),\n        });\n\n        const result = await response.json();\n        if (result.success) {\n          setHtmlContent(result.data);\n        }\n      } catch (error) {\n        console.error(\"Error converting markdown:\", error);\n      }\n    };\n    convertMarkdown();\n  }, [project.content]);\n\n  const startDrag = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n    setDragOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const startResize = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    setResizeStart({\n      x: e.clientX,\n      y: e.clientY,\n      width: windowSize.width,\n      height: windowSize.height,\n    });\n  };\n\n  const windowContent = (\n    <>\n      <div\n        className={`retro-window fixed ${isActive ? \"active\" : \"\"}`}\n        style={{\n          left: position.x,\n          top: position.y,\n          width: windowSize.width,\n          height: windowSize.height,\n          zIndex: 999, // Higher than main windows but lower than taskbar (1000)\n        }}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (onActivate) {\n            onActivate();\n          }\n        }}\n      >\n        {/* Window Titlebar */}\n        <div\n          className={`window-titlebar cursor-move ${isActive ? \"active\" : \"\"}`}\n          onMouseDown={(e) => {\n            startDrag(e);\n            if (onActivate) {\n              onActivate();\n            }\n          }}\n        >\n          <div className=\"flex items-center space-x-2\">\n            <span>{project.title}</span>\n          </div>\n          <div className=\"flex space-x-1\">\n            {/* Minimize Button */}\n            <button\n              className=\"w-7 h-7 bg-yellow-600 border-2 border-yellow-800 flex items-center justify-center text-black text-lg font-bold hover:bg-yellow-500 transition-colors cursor-pointer\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onClose();\n              }}\n              style={{\n                boxShadow: \"inset 1px 1px 0 #ffff80, inset -1px -1px 0 #808000\",\n                borderRadius: \"4px\",\n              }}\n            >\n              ‚àí\n            </button>\n            {/* Close Button */}\n            <button\n              className=\"w-7 h-7 bg-red-600 border-2 border-red-800 flex items-center justify-center text-white text-lg font-bold hover:bg-red-500 transition-colors cursor-pointer\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onClose();\n              }}\n              style={{\n                boxShadow: \"inset 1px 1px 0 #ff8080, inset -1px -1px 0 #800000\",\n                borderRadius: \"4px\",\n              }}\n            >\n              √ó\n            </button>\n          </div>\n        </div>\n        {/* Window Content */}\n        <div className=\"window-content h-full overflow-auto relative\">\n          <div className=\"p-4\">\n\n            {/* Resize Handle */}\n            <div\n              className=\"cursor-se-resize\"\n              onMouseDown={startResize}\n              style={{\n                position: \"absolute\",\n                bottom: 0,\n                right: 0,\n                width: \"16px\",\n                height: \"16px\",\n                background: \"#2a2a2a\",\n                cursor: \"se-resize\",\n                borderTop: \"1px solid #606060\",\n                borderLeft: \"1px solid #606060\",\n                boxShadow: \"inset 1px 1px 0 #0a0a0a\",\n              }}\n            />\n            {/* Project Header */}\n            <div className=\"flex items-center gap-3 mb-4\">\n              <PixelIcon icon={getProjectIcon(project.title)} size={32} />\n              <div>\n                <h1 className=\"text-xl font-bold text-[#000080]\">\n                  {project.title}\n                </h1>\n                <p className=\"text-sm text-[#000000]\">{project.description}</p>\n              </div>\n            </div>\n\n            {/* Project Meta */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n              <div className=\"bg-[#ffffff] border border-[#808080] p-3\">\n                <span className=\"text-xs text-[#808080]\">Client</span>\n                <p className=\"font-medium text-sm\">{project.client}</p>\n              </div>\n              <div className=\"bg-[#ffffff] border border-[#808080] p-3\">\n                <span className=\"text-xs text-[#808080]\">Duration</span>\n                <p className=\"font-medium text-sm\">{project.duration}</p>\n              </div>\n              <div className=\"bg-[#ffffff] border border-[#808080] p-3\">\n                <span className=\"text-xs text-[#808080]\">Date</span>\n                <p className=\"font-medium text-sm\">\n                  {new Date(project.date).toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n\n            {/* Project Links */}\n            <div className=\"flex flex-wrap gap-3 mb-4\">\n              {project.live_url && (\n                <a\n                  href={project.live_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 bg-[#c0c0c0] border-2 border-[#dfdfdf] border-t-[#808080] border-l-[#808080] text-[#000000] font-semibold text-sm hover:bg-[#d4d0c8] transition-colors\"\n                >\n                  View Live Site\n                </a>\n              )}\n              {project.github_url && (\n                <a\n                  href={project.github_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 bg-[#c0c0c0] border-2 border-[#dfdfdf] border-t-[#808080] border-l-[#808080] text-[#000000] font-semibold text-sm hover:bg-[#d4d0c8] transition-colors\"\n                >\n                  View Code\n                </a>\n              )}\n            </div>\n\n            {/* Project Content */}\n            <div className=\"mb-4\">\n              <h2 className=\"text-lg font-bold text-[#000080] mb-4\">\n                üìÑ Project Details\n              </h2>\n              <div\n                className=\"prose prose-sm max-w-none text-[#000000]\"\n                style={\n                  {\n                    // Tailwind prose overrides\n                    \"--tw-prose-body\": \"#000000\",\n                    \"--tw-prose-headings\": \"#000080\",\n                    \"--tw-prose-links\": \"#000080\",\n                  } as React.CSSProperties\n                }\n                dangerouslySetInnerHTML={{ __html: htmlContent }}\n              />\n            </div>\n\n            {/* Technologies Used */}\n            <div className=\"mb-4\">\n              <h3 className=\"text-lg font-bold text-[#000080] mb-4\">\n                üîß Technologies Used\n              </h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {project.technologies.map((tech) => (\n                  <span\n                    key={tech}\n                    className=\"px-3 py-1 bg-[#ffffff] border border-[#808080] text-[#000000] font-medium text-xs\"\n                  >\n                    {tech}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            {/* Project Gallery */}\n            {project.gallery && project.gallery.length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-bold text-[#000080] mb-4\">\n                  üñºÔ∏è Project Gallery\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {project.gallery.map((image, index) => (\n                    <div\n                      key={index}\n                      className=\"bg-[#ffffff] border border-[#808080] h-48 flex items-center justify-center\"\n                    >\n                      <span className=\"text-[#808080] text-sm\">\n                        Gallery Image {index + 1}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  if (!mounted) return null;\n\n  return createPortal(windowContent, document.body);\n}\n\n/**\n * Get Project Icon\n *\n * Maps project titles to appropriate Windows 98-style icons.\n * Returns emoji representations that will be styled by the PixelIcon component.\n */\nfunction getProjectIcon(projectTitle: string): string {\n  const title = projectTitle.toLowerCase();\n\n  if (title.includes(\"landscape\") || title.includes(\"edgewater\")) {\n    return \"üìÅ\"; // Folder icon for landscape project\n  } else if (title.includes(\"smps\") || title.includes(\"new york\")) {\n    return \"üíº\"; // Briefcase for professional services\n  } else if (title.includes(\"sbn\") || title.includes(\"philadelphia\")) {\n    return \"üìÅ\"; // Folder for business network\n  } else if (title.includes(\"evron\")) {\n    return \"üìß\"; // Mail for e-commerce\n  } else if (title.includes(\"springboard\") || title.includes(\"collaborative\")) {\n    return \"üìÅ\"; // Folder for educational nonprofit\n  } else if (title.includes(\"u3\") || title.includes(\"studio\")) {\n    return \"üíº\"; // Briefcase for creative agency\n  } else {\n    return \"üìÅ\"; // Default folder icon\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/RetroLoading.tsx"],"sourcesContent":["/**\n * RetroLoading Component\n *\n * A hacker-style terminal loading animation that displays\n * funny console messages with retro terminal aesthetics.\n * Perfect for loading states in the Windows 98 interface.\n */\n\nimport { useState, useEffect, useRef } from \"react\";\n\ninterface RetroLoadingProps {\n  messages?: string[];\n  onComplete?: () => void;\n  duration?: number;\n}\n\nexport default function RetroLoading({\n  messages = [\n    \"> Initializing retro interface {{dots}}\",\n    \"> Loading RobotOS nostalgia {{dots}}\",\n    \"> Bypassing modern web standards {{dots}}\",\n    \"> Installing pixel art drivers {{dots}}\",\n    \"> System ready. Welcome to RobotOS!\",\n  ],\n  onComplete,\n  duration = 3500,\n}: RetroLoadingProps) {\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [spinnerChar, setSpinnerChar] = useState(0);\n  const [dotCounts, setDotCounts] = useState<{ [index: number]: number }>({});\n  const textRef = useRef<HTMLDivElement>(null);\n  const spinnerChars = [\"|\", \"/\", \"-\", \"\\\\\"];\n\n  // Store random max dots for each message\n  const maxDotsPerMessage = useRef<{ [index: number]: number }>({});\n\n  function getMaxDots(index: number) {\n    if (!maxDotsPerMessage.current[index]) {\n      // Random between 3 and 7 for variety\n      maxDotsPerMessage.current[index] = Math.floor(Math.random() * 5) + 3;\n    }\n    return maxDotsPerMessage.current[index];\n  }\n\n  useEffect(() => {\n    const messageInterval = setInterval(() => {\n      setCurrentMessageIndex((prev) => {\n        if (prev < messages.length - 1) {\n          return prev + 1;\n        } else {\n          clearInterval(messageInterval);\n          setTimeout(() => {\n            setIsComplete(true);\n            onComplete?.();\n          }, 1000);\n          return prev;\n        }\n      });\n    }, duration / messages.length);\n\n    return () => clearInterval(messageInterval);\n  }, [messages, duration, onComplete]);\n\n  // Spinner animation\n  useEffect(() => {\n    const spinnerInterval = setInterval(() => {\n      setSpinnerChar((prev) => (prev + 1) % spinnerChars.length);\n    }, 300);\n    return () => clearInterval(spinnerInterval);\n  }, [spinnerChars.length]);\n\n  // Simple console loader dots - appear one by one, stop at random numbers\n  useEffect(() => {\n    const dotsInterval = setInterval(() => {\n      setDotCounts((prev) => {\n        const newCounts = { ...prev };\n\n        // For each visible message with dots\n        for (let i = 0; i <= currentMessageIndex; i++) {\n          if (messages[i].includes(\"{{dots}}\")) {\n            const currentCount = newCounts[i] || 0;\n            const maxDots = getMaxDots(i);\n\n            // Add one dot if not at max yet\n            if (currentCount < maxDots) {\n              newCounts[i] = currentCount + 1;\n            }\n          }\n        }\n\n        return newCounts;\n      });\n    }, 100); // Very fast animation\n\n    return () => clearInterval(dotsInterval);\n  }, [currentMessageIndex, messages]);\n\n  // Auto-scroll to bottom when new messages appear\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.scrollTop = textRef.current.scrollHeight;\n    }\n  }, [currentMessageIndex]);\n\n  if (isComplete) {\n    return null;\n  }\n\n  // Helper to render message with dots and spinner\n  function renderMessage(message: string, index: number) {\n    // Replace spinner\n    const html = message.replace(\n      /<span class=\"spinning-indicator\"[^>]*><\\/span>/g,\n      spinnerChars[spinnerChar]\n    );\n    // Split on {{dots}} token\n    const parts = html.split(\"{{dots}}\");\n    if (parts.length === 1) {\n      return <span dangerouslySetInnerHTML={{ __html: html }} />;\n    }\n\n    return (\n      <>\n        <span dangerouslySetInnerHTML={{ __html: parts[0] }} />\n        <span\n          className=\"loading-dots-plain\"\n          style={{ color: \"var(--text-primary)\", textShadow: \"none\" }}\n        >\n          {\".\".repeat(dotCounts[index] || 0)}\n        </span>\n        <span dangerouslySetInnerHTML={{ __html: parts[1] }} />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"retro-window\">\n      {/* Window Title Bar */}\n      <div className=\"window-titlebar\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm font-medium\">robotOS.ini startup</span>\n        </div>\n      </div>\n\n      {/* Window Content */}\n      <div className=\"window-content\" style={{ height: \"400px\" }}>\n        <div className=\"retro-loading-text\" ref={textRef}>\n          {messages.slice(0, currentMessageIndex + 1).map((message, index) => (\n            <div key={index} className=\"terminal-message\">\n              {renderMessage(message, index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1337, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/WindowContent.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport PixelIcon from \"./PixelIcon\";\nimport ProjectWindow from \"./ProjectWindow\";\nimport RetroLoading from \"./RetroLoading\";\n\n/**\n * WindowContent Component Props\n *\n * Defines the props for the WindowContent component which loads\n * different content based on the current page/route.\n */\ninterface WindowContentProps {\n  page: \"home\" | \"about\" | \"work\" | \"contact\"; // The page content to load\n}\n\ninterface PortfolioProject {\n  slug: string;\n  title: string;\n  description: string;\n  client: string;\n  duration: string;\n  date: string;\n  category: string;\n  technologies: string[];\n  live_url?: string;\n  github_url?: string;\n  gallery?: string[];\n  content: string;\n  featured?: boolean;\n}\n\n/**\n * WindowContent Component\n *\n * This component dynamically loads content for different pages within\n * the desktop windows. It provides:\n *\n * For Work Page:\n * - Interactive project grid with RobotOS-style icons\n * - Clickable project icons that open detailed project windows\n * - Window management system (open, close, drag, activate)\n * - Project categories and metadata display\n *\n * For Other Pages:\n * - Markdown content rendering from API routes\n * - Loading and error states\n * - Consistent RobotOS styling\n *\n * The component integrates with the RetroDesktop system to provide\n * a seamless RobotOS-style desktop experience where all content\n * opens within windows rather than navigating to new pages.\n */\nexport default function WindowContent({ page }: WindowContentProps) {\n  // State for work page\n  const [projects, setProjects] = useState<PortfolioProject[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Window management state for work page\n  const [openWindows, setOpenWindows] = useState<{\n    [key: string]: {\n      project: PortfolioProject;\n      position: { x: number; y: number };\n      isActive: boolean;\n    };\n  }>({});\n  const [activeWindow, setActiveWindow] = useState<string | null>(null);\n\n  // State for other pages\n  const [html, setHtml] = useState<string>(\"\");\n  const [otherPageLoading, setOtherPageLoading] = useState(true);\n  const [otherPageError, setOtherPageError] = useState<string | null>(null);\n\n  /**\n   * Load Content Effect\n   *\n   * Handles different content loading based on the page type.\n   */\n  useEffect(() => {\n    if (page === \"work\") {\n      loadWorkPage();\n    } else {\n      loadOtherPage();\n    }\n  }, [page]);\n\n  /**\n   * Load Work Page Content\n   *\n   * Fetches projects and sets up the interactive work page.\n   */\n  const loadWorkPage = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(\"/api/content/projects\");\n      const result = await response.json();\n\n      if (result.success) {\n        setProjects(result.data);\n      } else {\n        setError(result.error || \"Failed to fetch projects\");\n      }\n    } catch (err) {\n      setError(\"Failed to fetch projects\");\n      console.error(\"Error fetching projects:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Load Other Page Content\n   *\n   * Fetches markdown content for non-work pages.\n   */\n  const loadOtherPage = async () => {\n    try {\n      setOtherPageLoading(true);\n      setOtherPageError(null);\n\n      const response = await fetch(`/api/content/${page}`);\n      if (!response.ok) throw new Error(\"Not found\");\n\n      const data = await response.json();\n      setHtml(data.html);\n    } catch (err) {\n      setOtherPageError(\"Failed to load content\");\n      console.error(\"Error loading content:\", err);\n    } finally {\n      setOtherPageLoading(false);\n    }\n  };\n\n  /**\n   * Work Page Window Management\n   */\n  const openProjectWindow = (project: PortfolioProject) => {\n    // Close any existing windows\n    setOpenWindows({});\n\n    // Open new window\n    const windowId = project.slug;\n    setOpenWindows({\n      [windowId]: {\n        project,\n        position: { x: 100, y: 100 },\n        isActive: true,\n      },\n    });\n    setActiveWindow(windowId);\n  };\n\n  const closeProjectWindow = (windowId: string) => {\n    setOpenWindows((prev) => {\n      const newWindows = { ...prev };\n      delete newWindows[windowId];\n      return newWindows;\n    });\n    if (activeWindow === windowId) {\n      setActiveWindow(null);\n    }\n  };\n\n  const activateWindow = (windowId: string) => {\n    setActiveWindow(windowId);\n    setOpenWindows((prev) => {\n      const newWindows = { ...prev };\n      Object.keys(newWindows).forEach((id) => {\n        newWindows[id].isActive = id === windowId;\n      });\n      return newWindows;\n    });\n  };\n\n  const moveWindow = (windowId: string, x: number, y: number) => {\n    setOpenWindows((prev) => ({\n      ...prev,\n      [windowId]: {\n        ...prev[windowId],\n        position: { x, y },\n      },\n    }));\n  };\n\n  /**\n   * Get Project Icon\n   */\n  const getProjectIcon = (): string => {\n    return \"folder\";\n  };\n\n  // Render work page\n  if (page === \"work\") {\n    // Loading state\n    if (loading) {\n      return (\n        <div className=\"p-8\">\n          <RetroLoading\n            messages={[\n              \"$ cd /portfolio\",\n              \"$ ls -la\",\n              \"[OK] Found 6 project files\",\n              \"$ cat projects.json\",\n              \"[OK] Loading project metadata...\",\n              \"$ npm install nostalgia\",\n              \"[OK] RobotOS compatibility installed\",\n              \"\",\n              \"    [ROBOT] Scanning project files...\",\n              \"    [ROBOT] Found 6 portfolio entries\",\n              \"    [ROBOT] Loading pixel art assets...\",\n              \"    [ROBOT] Ready to display projects! ü§ñ\",\n              \"\",\n              \"$ echo 'Projects loaded successfully'\",\n              \"Projects loaded successfully\",\n            ]}\n            duration={3000}\n          />\n        </div>\n      );\n    }\n\n    // Error state\n    if (error) {\n      return (\n        <div className=\"p-8 text-center\">\n          <div className=\"text-2xl mb-4\">‚ùå</div>\n          <h2 className=\"text-lg font-bold text-[#000080] mb-2\">\n            Error Loading Projects\n          </h2>\n          <p className=\"text-sm text-[#000000] mb-4\">{error}</p>\n          <button\n            onClick={loadWorkPage}\n            className=\"px-4 py-2 bg-[#c0c0c0] border-2 border-[#dfdfdf] border-t-[#808080] border-l-[#808080] text-[#000000] font-semibold hover:bg-[#d4d0c8] transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      );\n    }\n\n    // Extract categories\n    const categories = Array.from(\n      new Set(projects.map((project) => project.category))\n    );\n\n    return (\n      <div className=\"relative\">\n        {/* Work Page Content */}\n        <div className=\"p-6\">\n          {/* Page Header */}\n          <div className=\"mb-6\">\n            <h1 className=\"text-2xl font-bold text-[#000080] mb-2\">\n              üìÅ My Work\n            </h1>\n            <p className=\"text-[#000000] text-sm\">\n              Click on any project icon to open it in a window. A collection of\n              projects that showcase my skills in web development, design, and\n              creative problem-solving.\n            </p>\n          </div>\n\n          {/* Projects Grid */}\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6 mb-8\">\n            {projects.map((project) => (\n              <button\n                key={project.slug}\n                onClick={() => openProjectWindow(project)}\n                className=\"window-icon\"\n              >\n                {/* Project Icon */}\n                <div className=\"mb-2\">\n                  <PixelIcon icon={getProjectIcon()} size={48} />\n                </div>\n\n                {/* Project Title */}\n                <div className=\"text-center\">\n                  <h3 className=\"text-xs font-medium text-center leading-tight\">\n                    {project.title}\n                  </h3>\n                  {project.featured && (\n                    <span className=\"text-xs text-[#ff0000]\">‚òÖ Featured</span>\n                  )}\n                </div>\n              </button>\n            ))}\n          </div>\n\n          {/* Categories Summary */}\n          <div className=\"mb-6\">\n            <h2 className=\"text-lg font-bold text-[#000080] mb-4\">\n              üìä Project Categories\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {categories.map((category) => {\n                const categoryProjects = projects.filter(\n                  (project) => project.category === category\n                );\n                return (\n                  <div\n                    key={category}\n                    className=\"bg-[#ffffff] border border-[#808080] p-3\"\n                  >\n                    <h3 className=\"text-sm font-semibold text-[#000000] mb-1\">\n                      {category}\n                    </h3>\n                    <p className=\"text-xs text-[#808080]\">\n                      {categoryProjects.length} projects\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Project Windows */}\n        {Object.entries(openWindows).map(([windowId, windowData]) => (\n          <ProjectWindow\n            key={windowId}\n            project={windowData.project}\n            onClose={() => closeProjectWindow(windowId)}\n            isActive={windowData.isActive}\n            onActivate={() => activateWindow(windowId)}\n            position={windowData.position}\n            onMove={(x, y) => moveWindow(windowId, x, y)}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Render other pages\n  if (otherPageLoading) {\n    return (\n      <div className=\"p-8\">\n        <RetroLoading\n          messages={[\n            \"$ cd /content\",\n            \"$ find . -name '*.md'\",\n            \"[OK] Found markdown files\",\n            \"$ pandoc content.md -o content.html\",\n            \"[OK] Markdown converted to HTML\",\n            \"$ cp retro-styles.css /tmp/\",\n            \"[OK] RobotOS styling applied\",\n            \"\",\n            \"    [ROBOT] Content processed successfully\",\n            \"    [ROBOT] Styling applied with retro flair\",\n            \"    [ROBOT] Ready to display! ü§ñ\",\n            \"\",\n            \"$ echo 'Content ready for display!'\",\n            \"Content ready for display!\",\n          ]}\n          duration={2500}\n        />\n      </div>\n    );\n  }\n\n  if (otherPageError) {\n    return <div className=\"p-8 text-center text-red-600\">{otherPageError}</div>;\n  }\n\n  return (\n    <div\n      className=\"prose max-w-none p-6\"\n      style={\n        {\n          \"--tw-prose-body\": \"#000000\",\n          \"--tw-prose-headings\": \"#000080\",\n          \"--tw-prose-links\": \"#000080\",\n        } as React.CSSProperties\n      }\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1793, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/WindowLoader.tsx"],"sourcesContent":["/**\n * WindowLoader Component\n *\n * A spinning dot loader that appears when windows are opening.\n * Uses a pixel-perfect spinning animation with RobotOS styling.\n * Fades out to reveal the window content when loading is complete.\n */\n\ninterface WindowLoaderProps {\n  isLoading: boolean;\n}\n\nexport default function WindowLoader({ isLoading }: WindowLoaderProps) {\n  if (!isLoading) return null;\n\n  return (\n    <div className=\"window-loader-overlay\">\n      <div className=\"window-loader\">\n        <div className=\"window-loader-spinner\"></div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;AAMc,SAAS,aAAa,EAAE,SAAS,EAAqB;IACnE,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;;;;;;AAIvB","debugId":null}},
    {"offset": {"line": 1834, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/RetroDesktop.tsx"],"sourcesContent":["\"use client\";\n\nimport { usePathname } from \"next/navigation\";\nimport { useState, useEffect, useRef } from \"react\";\nimport PixelIcon from \"./PixelIcon\";\nimport Image from \"next/image\";\n// Note: These imports are not used in the current implementation\n// Content is loaded dynamically through WindowContent component\n// import AboutPage from \"@/app/about/page\";\n// import WorkPage from \"@/app/work/page\";\n// import ContactPage from \"@/app/contact/page\";\nimport WindowContent from \"./WindowContent\";\nimport WindowLoader from \"./WindowLoader\";\n\n/**\n * Window Interface\n *\n * Defines the structure for each window in the desktop environment.\n * Windows can be opened, closed, minimized, moved, and resized.\n */\ninterface Window {\n  id: string; // Unique identifier for the window\n  title: string; // Display title in the window titlebar\n  isOpen: boolean; // Whether the window is currently open\n  isMinimized: boolean; // Whether the window is minimized\n  zIndex: number; // Stacking order for overlapping windows\n  position: { x: number; y: number }; // Window position on screen\n  size: { width: number; height: number }; // Window dimensions\n}\n\n/**\n * Window Content Mapping\n *\n * Maps route paths to their corresponding content components.\n * This allows the desktop to load different content based on the current route.\n */\nconst windowContentMap: Record<string, React.ReactNode> = {\n  \"/\": <WindowContent page=\"home\" />,\n  \"/about\": <WindowContent page=\"about\" />,\n  \"/work\": <WindowContent page=\"work\" />,\n  \"/contact\": <WindowContent page=\"contact\" />,\n};\n\n/**\n * RetroDesktop Component\n *\n * This is the main component that creates the RobotOS desktop interface.\n * It provides:\n * - Desktop background with grid pattern\n * - Draggable desktop icons for navigation\n * - Window management system (open, close, minimize, resize, drag)\n * - Taskbar with start menu and running applications\n * - Authentic RobotOS styling and interactions\n *\n * The component uses React state to manage:\n * - Window positions, sizes, and states\n * - Active window selection\n * - Desktop icon selection\n * - Start menu visibility\n * - Drag and resize operations\n *\n * Special handling for the work page:\n * - The work page opens in its own window with interactive project grid\n * - Project icons within the work window open detailed project windows\n * - Only one project window can be open at a time within the work environment\n * - All content stays within the desktop environment (no page navigation)\n */\nexport default function RetroDesktop() {\n  const pathname = usePathname();\n\n  // Window management state\n  const [windows, setWindows] = useState<Window[]>([]);\n  const [activeWindow, setActiveWindow] = useState<string | null>(null);\n\n  // Desktop interaction state\n  const [selectedDesktopIcon, setSelectedDesktopIcon] = useState<string | null>(\n    null\n  );\n  const [startMenuOpen, setStartMenuOpen] = useState(false);\n\n  // Drag and resize state\n  const [draggedWindow, setDraggedWindow] = useState<string | null>(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [resizingWindow, setResizingWindow] = useState<string | null>(null);\n  const [resizeStart, setResizeStart] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  });\n\n  // Window loading state\n  const [windowLoading, setWindowLoading] = useState<{\n    [key: string]: boolean;\n  }>({});\n\n  // Utility refs and state\n  const initializedWindows = useRef<Set<string>>(new Set());\n  const [hasMounted, setHasMounted] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [timeBasedGradient, setTimeBasedGradient] = useState(\"\");\n\n  /**\n   * Get Time-Based Background Gradient\n   *\n   * Returns different gradient backgrounds based on the current time of day:\n   * - Morning (6-11): Goldenrod to light blue\n   * - Afternoon (12-17): Yellow to orange\n   * - Evening (18-21): Blue to pink (current)\n   * - Night (22-5): Dark blue gradient\n   */\n  const getTimeBasedGradient = (hour: number) => {\n    if (hour >= 6 && hour < 12) {\n      // Morning: Bright blue to pink with smooth blending\n      return \"linear-gradient(180deg, #7bc8f0 0%, #8fd4f5 20%, #a8d8ff 40%, #c4e0f5 60%, #e8d0e8 80%, #f8b4d9 90%, #ffb3d9 100%)\";\n    } else if (hour >= 12 && hour < 18) {\n      // Afternoon: Yellow to orange to pink with smooth blending\n      return \"linear-gradient(180deg, #ffd700 0%, #ffc040 25%, #ffb84d 45%, #ffc085 65%, #f0c0d0 80%, #f8b4d9 90%, #ffb3d9 100%)\";\n    } else if (hour >= 18 && hour < 22) {\n      // Evening: Purple to pink with smooth blending\n      return \"linear-gradient(180deg, #9370db 0%, #a585d9 25%, #b19cd9 45%, #c8a2c8 65%, #e0b8d0 80%, #f8b4d9 90%, #ffb3d9 100%)\";\n    } else {\n      // Night: Dark indigo to pink with smooth blending\n      return \"linear-gradient(180deg, #4b0082 0%, #5a2a8a 25%, #6a4c93 45%, #8a7bb8 65%, #c0a0d0 80%, #f8b4d9 90%, #ffb3d9 100%)\";\n    }\n  };\n\n  /**\n   * Get appropriate text color for desktop icons based on time of day\n   * Ensures good contrast against the background gradient\n   */\n  const getIconTextColor = (hour: number) => {\n    if (hour >= 6 && hour < 12) {\n      // Morning: Dark text for light background\n      return \"#000000\";\n    } else if (hour >= 12 && hour < 18) {\n      // Afternoon: Dark text for light background\n      return \"#000000\";\n    } else if (hour >= 18 && hour < 22) {\n      // Evening: Dark text for light background\n      return \"#000000\";\n    } else {\n      // Night: Light text for dark background\n      return \"#ffffff\";\n    }\n  };\n\n  /**\n   * Navigation Configuration\n   *\n   * Defines the main navigation items that appear as desktop icons.\n   * Each item has a name, href (route), and emoji icon.\n   * Uses clean retro-style icons inspired by minimal web design.\n   */\n  const navigation = [\n    { name: \"About\", href: \"/about\", icon: \"üë§\" },\n    { name: \"Work\", href: \"/work\", icon: \"folder\" },\n    { name: \"Contact\", href: \"/contact\", icon: \"contact\" },\n  ];\n\n  /**\n   * Calculate Responsive Window Size\n   *\n   * Determines window size based on screen size, scaling down proportionally\n   * on smaller screens like a responsive OS would behave.\n   */\n  const getResponsiveWindowSize = () => {\n    const screenWidth = window.innerWidth;\n\n    // Base sizes for large screens (reduced height for better fit)\n    const baseWidth = 850;\n    const baseHeight = 550; // Reduced from 650 to 550\n\n    // Scale down on smaller screens (better fit for mobile/tablet)\n    if (screenWidth < 1200) {\n      const scale = Math.max(0.4, screenWidth / 1200);\n      return {\n        width: Math.floor(baseWidth * scale),\n        height: Math.floor(baseHeight * scale),\n      };\n    }\n\n    // Scale up on extra large screens\n    if (screenWidth >= 1400) {\n      const scale = Math.min(1.4, screenWidth / 1400);\n      return {\n        width: Math.floor(baseWidth * scale),\n        height: Math.floor(baseHeight * scale),\n      };\n    }\n\n    return { width: baseWidth, height: baseHeight };\n  };\n\n  /**\n   * Calculate Cascading Position for New Windows\n   *\n   * Determines the position for new windows with a cascading effect.\n   * Each new window is offset diagonally from the previous one,\n   * similar to Windows 95/98 behavior. Ensures windows always fit on screen.\n   * First window starts higher up for better visual balance.\n   */\n  const getCascadingPosition = () => {\n    const windowSize = getResponsiveWindowSize();\n    const cascadeOffset = 35; // Larger offset for better spacing\n\n    // Count how many windows are currently open\n    const openWindowCount = windows.filter((w) => !w.isMinimized).length;\n\n    // Start higher up for the first window, then cascade\n    const baseX = Math.max(0, (window.innerWidth - windowSize.width) / 2);\n    const baseY =\n      Math.max(0, (window.innerHeight - windowSize.height) / 2) - 50; // Start higher\n\n    const x = baseX + openWindowCount * cascadeOffset;\n    const y = baseY + openWindowCount * cascadeOffset;\n\n    // Ensure window doesn't go off-screen with proper margins\n    const maxX = Math.max(0, window.innerWidth - windowSize.width - 20);\n    const maxY = Math.max(0, window.innerHeight - windowSize.height - 80); // Leave space for taskbar\n\n    return {\n      x: Math.min(Math.max(0, x), maxX),\n      y: Math.min(Math.max(0, y), maxY),\n    };\n  };\n\n  /**\n   * Initialize Windows Based on Current Path\n   *\n   * Automatically opens a window for the current route when the component mounts\n   * or when the pathname changes. This ensures users see content relevant to\n   * their current location in the app.\n   */\n  useEffect(() => {\n    // Skip window management for work page - it has its own window system\n    if (pathname === \"/work\") {\n      return;\n    }\n\n    const currentPage = navigation.find((item) =>\n      item.href === \"/\" ? pathname === \"/\" : pathname.startsWith(item.href)\n    );\n\n    if (currentPage && !initializedWindows.current.has(currentPage.href)) {\n      initializedWindows.current.add(currentPage.href);\n      const cascadePos = getCascadingPosition();\n      const windowSize = getResponsiveWindowSize();\n      const newWindow: Window = {\n        id: currentPage.href,\n        title: currentPage.name,\n        isOpen: true,\n        isMinimized: false,\n        zIndex: windows.length + 1,\n        position: cascadePos,\n        size: windowSize,\n      };\n      setWindows((prev) => [...prev, newWindow]);\n      setActiveWindow(newWindow.id);\n    }\n  }, [pathname, windows.length]);\n\n  /**\n   * Update Clock Every Second\n   *\n   * Keeps the taskbar clock synchronized with the current time.\n   * This adds to the authentic Windows 95/98 experience.\n   */\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  /**\n   * Close Start Menu When Clicking Outside\n   *\n   * Provides intuitive behavior where clicking outside the start menu\n   * closes it, similar to how Windows 95/98 worked.\n   */\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setStartMenuOpen(false);\n    };\n\n    if (startMenuOpen) {\n      document.addEventListener(\"click\", handleClickOutside);\n      return () => document.removeEventListener(\"click\", handleClickOutside);\n    }\n  }, [startMenuOpen]);\n\n  /**\n   * Handle Mouse Move for Dragging and Resizing\n   *\n   * Manages the real-time updates when users are dragging windows\n   * or resizing them. This creates smooth, responsive interactions.\n   */\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (draggedWindow) {\n        // Update window position during drag with bounds checking\n        const newX = e.clientX - dragOffset.x;\n        const newY = e.clientY - dragOffset.y;\n\n        // Get the window being dragged\n        const draggedWin = windows.find((w) => w.id === draggedWindow);\n        if (draggedWin) {\n          const maxX = Math.max(\n            0,\n            window.innerWidth - draggedWin.size.width - 20\n          );\n          const maxY = Math.max(\n            0,\n            window.innerHeight - draggedWin.size.height - 80\n          );\n\n          const constrainedX = Math.min(Math.max(0, newX), maxX);\n          const constrainedY = Math.min(Math.max(0, newY), maxY);\n\n          setWindows((prev) =>\n            prev.map((w) =>\n              w.id === draggedWindow\n                ? {\n                  ...w,\n                  position: {\n                    x: constrainedX,\n                    y: constrainedY,\n                  },\n                }\n                : w\n            )\n          );\n        }\n      } else if (resizingWindow) {\n        // Update window size during resize with bounds checking\n        const deltaX = e.clientX - resizeStart.x;\n        const deltaY = e.clientY - resizeStart.y;\n        const responsiveSize = getResponsiveWindowSize();\n        const minWidth = Math.max(350, responsiveSize.width * 0.5);\n        const minHeight = Math.max(250, responsiveSize.height * 0.5);\n        const newWidth = Math.max(minWidth, resizeStart.width + deltaX);\n        const newHeight = Math.max(minHeight, resizeStart.height + deltaY);\n\n        // Constrain maximum size to viewport\n        const maxWidth = window.innerWidth - 40;\n        const maxHeight = window.innerHeight - 120;\n\n        const constrainedWidth = Math.min(newWidth, maxWidth);\n        const constrainedHeight = Math.min(newHeight, maxHeight);\n\n        setWindows((prev) =>\n          prev.map((w) =>\n            w.id === resizingWindow\n              ? {\n                ...w,\n                size: { width: constrainedWidth, height: constrainedHeight },\n              }\n              : w\n          )\n        );\n      }\n    };\n\n    const handleMouseUp = () => {\n      // End drag and resize operations\n      setDraggedWindow(null);\n      setResizingWindow(null);\n    };\n\n    if (draggedWindow || resizingWindow) {\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n      return () => {\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n      };\n    }\n  }, [draggedWindow, dragOffset, resizingWindow, resizeStart]);\n\n  /**\n   * Open Window Function\n   *\n   * Opens a new window or brings an existing window to the front.\n   * If the window already exists, it's restored and brought to the front.\n   * If it doesn't exist, a new window is created at the center of the screen.\n   */\n  const openWindow = (href: string, title: string) => {\n    const existingWindow = windows.find((w) => w.id === href);\n    if (existingWindow) {\n      // Bring existing window to front\n      setActiveWindow(href);\n      setWindows((prev) =>\n        prev.map((w) =>\n          w.id === href\n            ? {\n              ...w,\n              isMinimized: false,\n              zIndex: Math.max(...prev.map((w) => w.zIndex)) + 1,\n            }\n            : w\n        )\n      );\n    } else {\n      // Set loading state for new window\n      setWindowLoading((prev) => ({ ...prev, [href]: true }));\n\n      // Create new window\n      const cascadePos = getCascadingPosition();\n      const windowSize = getResponsiveWindowSize();\n      const newWindow: Window = {\n        id: href,\n        title,\n        isOpen: true,\n        isMinimized: false,\n        zIndex: Math.max(...windows.map((w) => w.zIndex), 0) + 1,\n        position: cascadePos,\n        size: windowSize,\n      };\n      setWindows((prev) => [...prev, newWindow]);\n      setActiveWindow(newWindow.id);\n\n      // Simulate loading time and then hide loader\n      setTimeout(() => {\n        setWindowLoading((prev) => ({ ...prev, [href]: false }));\n      }, 1500);\n    }\n  };\n\n  /**\n   * Close Window Function\n   *\n   * Removes a window from the desktop and clears it as the active window\n   * if it was currently active.\n   */\n  const closeWindow = (id: string) => {\n    setWindows((prev) => prev.filter((w) => w.id !== id));\n    if (activeWindow === id) {\n      setActiveWindow(null);\n    }\n  };\n\n  /**\n   * Minimize Window Function\n   *\n   * Hides a window from view while keeping it in memory.\n   * The window can be restored by clicking its taskbar icon.\n   */\n  const minimizeWindow = (id: string) => {\n    setWindows((prev) =>\n      prev.map((w) => (w.id === id ? { ...w, isMinimized: true } : w))\n    );\n    if (activeWindow === id) {\n      setActiveWindow(null);\n    }\n  };\n\n  /**\n   * Bring Window to Front Function\n   *\n   * Makes a window the active window and gives it the highest z-index\n   * so it appears on top of other windows.\n   */\n  const bringToFront = (id: string) => {\n    setActiveWindow(id);\n    setWindows((prev) =>\n      prev.map((w) => ({\n        ...w,\n        zIndex:\n          w.id === id ? Math.max(...prev.map((w) => w.zIndex)) + 1 : w.zIndex,\n      }))\n    );\n  };\n\n  /**\n   * Start Drag Function\n   *\n   * Initiates window dragging when the user clicks and drags the titlebar.\n   * Records the initial mouse position and window position for smooth dragging.\n   */\n  const startDrag = (e: React.MouseEvent, windowId: string) => {\n    e.preventDefault();\n    const window = windows.find((w) => w.id === windowId);\n    if (window) {\n      setDraggedWindow(windowId);\n      setDragOffset({\n        x: e.clientX - window.position.x,\n        y: e.clientY - window.position.y,\n      });\n      bringToFront(windowId);\n    }\n  };\n\n  /**\n   * Start Resize Function\n   *\n   * Initiates window resizing when the user clicks and drags the resize handle.\n   * Records the initial mouse position and window size for smooth resizing.\n   */\n  const startResize = (e: React.MouseEvent, windowId: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const window = windows.find((w) => w.id === windowId);\n    if (window) {\n      setResizingWindow(windowId);\n      setResizeStart({\n        x: e.clientX,\n        y: e.clientY,\n        width: window.size.width,\n        height: window.size.height,\n      });\n      bringToFront(windowId);\n    }\n  };\n\n  /**\n   * Toggle Start Menu Function\n   *\n   * Opens or closes the start menu when the start button is clicked.\n   * Prevents event bubbling to avoid immediate closure.\n   */\n  const toggleStartMenu = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setStartMenuOpen(!startMenuOpen);\n  };\n\n  /**\n   * Set Mounted State\n   *\n   * Ensures the component is fully mounted before rendering\n   * time-sensitive elements like the clock.\n   */\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  /**\n   * Handle Window Resize\n   *\n   * Ensures all windows stay within viewport bounds when the screen is resized.\n   * This prevents windows from being positioned outside the visible area.\n   * Also dynamically resizes windows when scaling back up for responsive behavior.\n   * Restores proper cascading positions for all windows.\n   */\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindows((prev) => {\n        // Recalculate cascading positions for all windows\n        const updatedWindows = prev.map((win, index) => {\n          const newSize = getResponsiveWindowSize();\n          const cascadeOffset = 35;\n\n          // Calculate new cascading position based on window order\n          const baseX = Math.max(0, (window.innerWidth - newSize.width) / 2);\n          const baseY =\n            Math.max(0, (window.innerHeight - newSize.height) / 2) - 50; // Start higher\n\n          const newX = baseX + index * cascadeOffset;\n          const newY = baseY + index * cascadeOffset;\n\n          // Ensure window doesn't go off-screen\n          const maxX = Math.max(0, window.innerWidth - newSize.width - 20);\n          const maxY = Math.max(0, window.innerHeight - newSize.height - 80);\n\n          const constrainedX = Math.min(Math.max(0, newX), maxX);\n          const constrainedY = Math.min(Math.max(0, newY), maxY);\n\n          return {\n            ...win,\n            position: { x: constrainedX, y: constrainedY },\n            size: newSize,\n          };\n        });\n\n        return updatedWindows;\n      });\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  // Update time-based gradient when time changes\n  useEffect(() => {\n    const hour = currentTime.getHours();\n    setTimeBasedGradient(getTimeBasedGradient(hour));\n  }, [currentTime]);\n\n  return (\n    <div\n      className=\"desktop-bg min-h-screen relative overflow-hidden\"\n      style={{\n        background: timeBasedGradient,\n        transition: \"background 0.5s ease-in-out\",\n      }}\n    >\n      {/* \n        Animated Cloud Scene\n        Pixel art clouds that move across the desktop background\n        creating a dynamic sky effect.\n      */}\n      <div className=\"desktop-cloud-scene\">\n        <div className=\"desktop-cloud-layer\" data-depth=\"0.2\">\n          <div className=\"desktop-cloud\"></div>\n        </div>\n        <div className=\"desktop-cloud-layer\" data-depth=\"0.5\">\n          <div className=\"desktop-cloud-two\"></div>\n        </div>\n        <div className=\"desktop-cloud-layer\" data-depth=\"0.4\">\n          <div className=\"desktop-cloud-three\"></div>\n        </div>\n        <div className=\"desktop-cloud-layer\" data-depth=\"0.2\">\n          <div className=\"desktop-cloud-four\"></div>\n        </div>\n      </div>\n\n      {/* \n        Desktop Icons\n        Clickable icons positioned in the top-left corner of the desktop.\n        Each icon represents a navigation item and can be clicked to open\n        the corresponding window.\n      */}\n      <div className=\"absolute top-8 left-8\">\n        {navigation.map((item) => (\n          <div\n            key={item.name}\n            className={`desktop-icon ${selectedDesktopIcon === item.href ? \"selected\" : \"\"\n              }`}\n            onClick={() => {\n              setSelectedDesktopIcon(item.href);\n              openWindow(item.href, item.name);\n            }}\n            onDoubleClick={() => {\n              setSelectedDesktopIcon(null);\n              openWindow(item.href, item.name);\n            }}\n          >\n            <div className=\"mb-1\">\n              {item.name === \"About\" ? (\n                <Image\n                  src=\"/images/rw-logo.png\"\n                  alt={item.name}\n                  width={46}\n                  height={46}\n                />\n              ) : item.name === \"Contact\" ? (\n                <Image\n                  src=\"/images/rw-site-icon-folder-closed-contact.png\"\n                  alt={item.name}\n                  width={46}\n                  height={46}\n                />\n              ) : (\n                <PixelIcon icon={item.icon} size={46} />\n              )}\n            </div>\n            <div\n              className=\"text-xs\"\n              style={{ color: getIconTextColor(currentTime.getHours()) }}\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* \n        Windows\n        Renders all open windows with their current positions, sizes, and states.\n        Each window can be dragged, resized, minimized, and closed.\n      */}\n      {windows.map((window) => (\n        <div\n          key={window.id}\n          className={`retro-window absolute ${window.isMinimized ? \"hidden\" : \"\"\n            } ${activeWindow === window.id ? \"active\" : \"\"}`}\n          style={{\n            left: window.position.x,\n            top: window.position.y,\n            width: window.size.width,\n            height: window.size.height,\n            zIndex: window.zIndex,\n          }}\n          onClick={() => bringToFront(window.id)}\n        >\n          {/* Window Titlebar */}\n          <div\n            className=\"window-titlebar cursor-move\"\n            onMouseDown={(e) => startDrag(e, window.id)}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <span>{window.title}</span>\n            </div>\n            <div className=\"flex space-x-1\">\n              {/* Minimize Button */}\n              <button\n                className=\"w-7 h-7 bg-yellow-600 border-2 border-yellow-800 flex items-center justify-center text-black text-lg font-bold hover:bg-yellow-500 transition-colors cursor-pointer\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  minimizeWindow(window.id);\n                }}\n                style={{\n                  boxShadow:\n                    \"inset 1px 1px 0 #ffff80, inset -1px -1px 0 #808000\",\n                  borderRadius: \"4px\",\n                }}\n              >\n                ‚àí\n              </button>\n              {/* Close Button */}\n              <button\n                className=\"w-7 h-7 bg-red-600 border-2 border-red-800 flex items-center justify-center text-white text-lg font-bold hover:bg-red-500 transition-colors cursor-pointer\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  closeWindow(window.id);\n                }}\n                style={{\n                  boxShadow:\n                    \"inset 1px 1px 0 #ff8080, inset -1px -1px 0 #800000\",\n                  borderRadius: \"4px\",\n                }}\n              >\n                √ó\n              </button>\n            </div>\n          </div>\n\n          {/* Window Content */}\n          <div className=\"window-content h-full overflow-auto relative\">\n            {windowContentMap[window.id]}\n\n            {/* Window Loader */}\n            <WindowLoader isLoading={windowLoading[window.id] || false} />\n\n            {/* Resize Handle */}\n            <div\n              className=\"cursor-se-resize\"\n              onMouseDown={(e) => startResize(e, window.id)}\n              style={{\n                position: \"absolute\",\n                bottom: 0,\n                right: 0,\n                width: \"16px\",\n                height: \"16px\",\n                background: \"#2a2a2a\",\n                cursor: \"se-resize\",\n                borderTop: \"1px solid #606060\",\n                borderLeft: \"1px solid #606060\",\n                boxShadow: \"inset 1px 1px 0 #0a0a0a\",\n                zIndex: 10,\n              }}\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* \n        Start Menu\n        Dropdown menu that appears when the start button is clicked.\n        Contains navigation items and branding information.\n      */}\n      {startMenuOpen && (\n        <div className=\"start-menu\">\n          <div className=\"start-menu-content\">\n            <div className=\"start-menu-header-xp\">\n              <span className=\"start-menu-header-xp-logo\">\n                <Image\n                  src=\"/images/rw-logo.png\"\n                  alt=\"robotOS\"\n                  width={36}\n                  height={36}\n                />\n              </span>\n              <span className=\"ml-3 text-base font-bold\">robotOS</span>\n            </div>\n            <div className=\"start-menu-items\">\n              {navigation.map((item) => (\n                <div\n                  key={item.name}\n                  className=\"start-menu-item flex items-center space-x-2\"\n                  onClick={() => {\n                    openWindow(item.href, item.name);\n                    setStartMenuOpen(false);\n                  }}\n                >\n                  {item.name === \"About\" ? (\n                    <Image\n                      src=\"/images/rw-logo.png\"\n                      alt={item.name}\n                      width={18}\n                      height={18}\n                    />\n                  ) : item.name === \"Contact\" ? (\n                    <Image\n                      src=\"/images/rw-site-icon-folder-closed-contact.png\"\n                      alt={item.name}\n                      width={18}\n                      height={18}\n                    />\n                  ) : (\n                    <PixelIcon icon={item.icon} size={18} />\n                  )}\n                  <span className=\"text-base\">{item.name}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* \n        Taskbar\n        Fixed bottom bar containing the start button, running applications,\n        and system clock. Provides quick access to open windows and navigation.\n      */}\n      <div className=\"taskbar\">\n        <div className=\"flex items-center space-x-2 ml-2\">\n          {/* Start Button */}\n          <button\n            className={`start-button flex items-center px-2 py-1 ${startMenuOpen ? \"bg-cyan-600\" : \"\"\n              }`}\n            style={{ gap: \"4px\" }}\n            onClick={toggleStartMenu}\n          >\n            <Image\n              src=\"/images/rw-site-icon-start.png\"\n              alt=\"Start\"\n              width={27}\n              height={27}\n            />\n            <span className=\"text-sm font-bold\">Start</span>\n          </button>\n\n          {/* Taskbar Icons */}\n          {navigation.map((item) => {\n            const window = windows.find((w) => w.id === item.href);\n            return (\n              <div\n                key={item.name}\n                className={`taskbar-icon ${window && !window.isMinimized ? \"active\" : \"\"\n                  }`}\n                onClick={() => {\n                  if (window && !window.isMinimized) {\n                    bringToFront(item.href);\n                  } else {\n                    openWindow(item.href, item.name);\n                  }\n                }}\n              >\n                {item.name === \"About\" ? (\n                  <Image\n                    src=\"/images/rw-logo.png\"\n                    alt={item.name}\n                    width={32}\n                    height={32}\n                  />\n                ) : item.name === \"Contact\" ? (\n                  <Image\n                    src=\"/images/rw-site-icon-folder-closed-contact.png\"\n                    alt={item.name}\n                    width={32}\n                    height={32}\n                  />\n                ) : (\n                  <PixelIcon icon={item.icon} size={32} />\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Clock */}\n        <div className=\"ml-auto flex items-center\">\n          {hasMounted && (\n            <div\n              className=\"text-sm font-bold py-1 flex items-center h-15 -mr-6\"\n              style={{\n                boxShadow: \"inset 1px 1px 0 #404040\",\n                borderRadius: \"20px\",\n                transform: \"scale(0.6)\",\n                transformOrigin: \"center\",\n                background: \"#7a9aca\",\n                border: \"2px solid #4a6a9a\",\n                paddingLeft: \"22px\",\n                paddingRight: \"16px\",\n              }}\n            >\n              <div className=\"clock-icon\">\n                <div className=\"hourglass\"></div>\n              </div>\n              <span className=\"clock-time\">\n                {currentTime.toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* \n        Click Outside Handler\n        Invisible overlay that deselects desktop icons when clicking\n        outside of them. Uses pointer-events: none to not interfere\n        with other interactions.\n      */}\n      <div\n        className=\"absolute inset-0 z-0\"\n        onClick={() => setSelectedDesktopIcon(null)}\n        style={{ pointerEvents: \"none\" }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2887, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/PageLoadWrapper.tsx"],"sourcesContent":["/**\n * PageLoadWrapper Component\n *\n * Wraps the entire application and shows a retro terminal loading\n * animation on initial page load before revealing the main content.\n * Creates an authentic Windows 98 boot experience.\n */\n\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport RetroLoading from \"./RetroLoading\";\n\ninterface PageLoadWrapperProps {\n  children: React.ReactNode;\n}\n\nexport default function PageLoadWrapper({ children }: PageLoadWrapperProps) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate a longer loading time for authentic feel\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 8000); // 8 seconds total loading time\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"page-load-container\">\n        <div className=\"cloud-scene\">\n          <div className=\"cloud-layer\" data-depth=\"0.2\">\n            <div className=\"cloud\"></div>\n          </div>\n          <div className=\"cloud-layer\" data-depth=\"0.5\">\n            <div className=\"cloud-two\"></div>\n          </div>\n          <div className=\"cloud-layer\" data-depth=\"0.4\">\n            <div className=\"cloud-three\"></div>\n          </div>\n          <div className=\"cloud-layer\" data-depth=\"0.2\">\n            <div className=\"cloud-four\"></div>\n          </div>\n        </div>\n        <div className=\"w-full max-w-2xl px-8 relative z-10\">\n          <RetroLoading\n            messages={[\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">sudo init robotOS</span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Kernel</span> loaded successfully',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Memory allocation</span>: <span class=\"terminal-memory\">640K</span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Loading</span> system modules {{dots}}',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Pixel drivers</span> initialized',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Bypassing</span> modern standards {{dots}}',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Nostalgia modules</span> installed',\n              \"\",\n              \"            __              __    _____   ____       \",\n              \"           /\\\\ \\\\            /\\\\ \\\\__/\\\\  __`\\\\/\\\\  _`\\\\     \",\n              \" _ __   ___\\\\ \\\\ \\\\____    ___\\\\ \\\\ ,_\\\\ \\\\ \\\\/\\\\ \\\\ \\\\,\\\\L\\\\_\\\\   \",\n              \"/\\\\`'__\\\\/ __`\\\\ \\\\ '__`\\\\  / __`\\\\ \\\\ \\\\/\\\\ \\\\ \\\\ \\\\ \\\\/_\\\\__ \\\\   \",\n              \"\\\\ \\\\ \\\\//\\\\ \\\\L\\\\ \\\\ \\\\ \\\\L\\\\ \\\\/\\\\ \\\\L\\\\ \\\\ \\\\ \\\\_\\\\ \\\\ \\\\_\\\\ \\\\/\\\\ \\\\L\\\\ \\\\ \",\n              \" \\\\ \\\\_\\\\\\\\ \\\\____/\\\\ \\\\_,__/\\\\ \\\\____/\\\\ \\\\__\\\\\\\\ \\\\_____\\\\ `\\\\____\\\\\",\n              \"  \\\\/_/ \\\\/___/  \\\\/___/  \\\\/___/  \\\\/__/ \\\\/_____/\\\\/_____/\",\n              \"                                                     \",\n              \"                                                     \",\n              \"                                                     \",\n              \"\",\n              \"    ‚îå‚îÄ‚îê\",\n              \"    ‚îÇR‚îÇ  robotOS Terminal\",\n              \"    ‚îî‚îÄ‚îò  Ready for commands {{dots}}\",\n              \"\",\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">echo</span> <span class=\"terminal-string\">\\'Loading retro vibes\\'</span>',\n              '<span class=\"terminal-string\">Loading retro vibes</span> {{dots}}',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">cat</span> <span class=\"terminal-path\">/dev/nostalgia</span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Found</span> <span class=\"terminal-number\">98%</span> pure nostalgia',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">sudo apt-get install</span> <span class=\"terminal-string\">pixelart</span>',\n              '<span class=\"terminal-process\">Installing</span> <span class=\"terminal-string\">pixelart</span> <span class=\"spinning-indicator\" data-char=\"/\"></span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Pixel art drivers</span> installed',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">systemctl start</span> <span class=\"terminal-service\">robotos.service</span>',\n              '<span class=\"terminal-process\">Starting</span> <span class=\"terminal-service\">robotos.service</span> {{dots}}',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-status\">ACTIVE</span><span class=\"terminal-bracket\">]</span> robotOS service started',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">whoami</span>',\n              '<span class=\"terminal-prompt\"><span class=\"terminal-user\">robot</span>@<span class=\"terminal-host\">robotos</span>:~$</span> {{dots}}',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">ls</span> <span class=\"terminal-path\">/home/robot/</span>',\n              '<span class=\"terminal-process\">Scanning directory</span> <span class=\"spinning-indicator\" data-char=\"|\"></span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Found</span>: <span class=\"terminal-string\">memories</span>, <span class=\"terminal-string\">dreams</span>, and <span class=\"terminal-string\">pixelart</span>',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">echo</span> <span class=\"terminal-string\">\\'Welcome to the matrix\\'</span>',\n              '<span class=\"terminal-string\">Welcome to the matrix {{dots}}',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">sudo chmod +x</span> <span class=\"terminal-path\">/usr/bin/retro</span>',\n              '<span class=\"terminal-process\">Setting</span> <span class=\"terminal-permission\">permissions</span> <span class=\"spinning-indicator\" data-char=\"-\"></span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> <span class=\"terminal-process\">Retro permissions</span> granted',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">ping</span> <span class=\"terminal-ip\">127.0.0.1</span> <span class=\"terminal-flag\">-c</span> <span class=\"terminal-number\">1</span>',\n              '<span class=\"terminal-info\">PING</span> <span class=\"terminal-ip\">127.0.0.1</span> (<span class=\"terminal-ip\">127.0.0.1</span>) <span class=\"terminal-number\">56(84)</span> bytes of data.',\n              '<span class=\"terminal-number\">64</span> bytes from <span class=\"terminal-ip\">127.0.0.1</span>: icmp_seq=<span class=\"terminal-number\">1</span> time=<span class=\"terminal-number\">0.001</span> ms',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">echo</span> <span class=\"terminal-string\">\\'System is alive!\\'</span>',\n              '<span class=\"terminal-string\">System is alive!</span> {{dots}}',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">brew install</span> <span class=\"terminal-string\">robotos</span>',\n              '<span class=\"terminal-process\">Installing</span> robotOS... <span class=\"progress-bar\"></span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-success\">OK</span><span class=\"terminal-bracket\">]</span> robotOS installed successfully',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">zsh --version</span>',\n              '<span class=\"terminal-process\">Checking zsh version</span> <span class=\"spinning-indicator\" data-char=\"\\\\\"></span>',\n              '<span class=\"terminal-string\">zsh</span> <span class=\"terminal-version\">5.8</span> (<span class=\"terminal-architecture\">x86_64-apple-darwin20.0</span>)',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">echo</span> <span class=\"terminal-string\">\\'ü§ñ Initializing robot consciousness\\'</span>',\n              \"ü§ñ Initializing robot consciousness {{dots}}\",\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">systemctl status</span> <span class=\"terminal-service\">robotos</span>',\n              '<span class=\"terminal-process\">Checking service status</span> <span class=\"spinning-indicator\" data-char=\"|\"></span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-status\">ACTIVE</span><span class=\"terminal-bracket\">]</span> robotOS is running <span class=\"spinning-indicator\" data-char=\"|\"></span>',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">systemctl status</span> <span class=\"terminal-service\">robotOS</span>',\n              '<span class=\"terminal-bracket\">[</span><span class=\"terminal-status\">ACTIVE</span><span class=\"terminal-bracket\">]</span> robotOS is running',\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">echo</span> <span class=\"terminal-string\">\\'<span class=\"retro-robot\">ü§ñ</span> System initialized successfully! <span class=\"retro-robot\">ü§ñ</span>\\'</span>',\n              \"ü§ñ System initialized successfully! ü§ñ\",\n              '<span class=\"terminal-prompt\">$</span> <span class=\"terminal-command\">whoami</span>',\n              '<span class=\"terminal-prompt\"><span class=\"terminal-user\">robot</span>@<span class=\"terminal-host\">robotos</span>:~$</span> {{dots}}',\n            ]}\n            duration={8000}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return <div className=\"page-fade-in\">{children}</div>;\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AAID;AACA;AAHA;;;;AASe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oDAAoD;QACpD,MAAM,QAAQ,WAAW;YACvB,aAAa;QACf,GAAG,OAAO,+BAA+B;QAEzC,OAAO,IAAM,aAAa;IAC5B,GAAG,EAAE;IAEL,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;4BAAc,cAAW;sCACtC,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;4BAAc,cAAW;sCACtC,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;4BAAc,cAAW;sCACtC,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;4BAAc,cAAW;sCACtC,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,kIAAA,CAAA,UAAY;wBACX,UAAU;4BACR;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;yBACD;wBACD,UAAU;;;;;;;;;;;;;;;;;IAKpB;IAEA,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;AACxC","debugId":null}},
    {"offset": {"line": 3088, "column": 0}, "map": {"version":3,"sources":["file:///Users/robw/Developer/rw-portfolio/src/components/ProjectWindowContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, ReactNode } from \"react\";\nimport ProjectWindow from \"./ProjectWindow\";\n\ninterface PortfolioProject {\n  slug: string;\n  title: string;\n  description: string;\n  client: string;\n  duration: string;\n  date: string;\n  category: string;\n  technologies: string[];\n  live_url?: string;\n  github_url?: string;\n  gallery?: string[];\n  content: string;\n  featured?: boolean;\n}\n\ninterface ProjectWindowContextType {\n  openProjectWindow: (project: PortfolioProject) => void;\n  closeProjectWindow: (windowId: string) => void;\n  openWindows: Record<string, { project: PortfolioProject; isActive: boolean }>;\n}\n\nconst ProjectWindowContext = createContext<\n  ProjectWindowContextType | undefined\n>(undefined);\n\nexport function ProjectWindowProvider() {\n  const [openWindows, setOpenWindows] = useState<\n    Record<string, { project: PortfolioProject; isActive: boolean }>\n  >({});\n\n  const closeProjectWindow = (windowId: string) => {\n    setOpenWindows((prev) => {\n      const newWindows = { ...prev };\n      delete newWindows[windowId];\n      return newWindows;\n    });\n  };\n\n  return (\n    <>\n      {/* Render project windows at root level */}\n      {Object.entries(openWindows).map(([windowId, windowData]) => (\n        <ProjectWindow\n          key={windowId}\n          project={windowData.project}\n          onClose={() => closeProjectWindow(windowId)}\n        />\n      ))}\n    </>\n  );\n}\n\nexport function ProjectWindowContextProvider({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const [openWindows, setOpenWindows] = useState<\n    Record<string, { project: PortfolioProject; isActive: boolean }>\n  >({});\n\n  const openProjectWindow = (project: PortfolioProject) => {\n    const windowId = `project-${project.slug}`;\n    setOpenWindows((prev) => ({\n      ...prev,\n      [windowId]: { project, isActive: true },\n    }));\n  };\n\n  const closeProjectWindow = (windowId: string) => {\n    setOpenWindows((prev) => {\n      const newWindows = { ...prev };\n      delete newWindows[windowId];\n      return newWindows;\n    });\n  };\n\n  return (\n    <ProjectWindowContext.Provider\n      value={{ openProjectWindow, closeProjectWindow, openWindows }}\n    >\n      {children}\n      {/* Render project windows at root level */}\n      {Object.entries(openWindows).map(([windowId, windowData]) => (\n        <ProjectWindow\n          key={windowId}\n          project={windowData.project}\n          onClose={() => closeProjectWindow(windowId)}\n        />\n      ))}\n    </ProjectWindowContext.Provider>\n  );\n}\n\nexport function useProjectWindows() {\n  const context = useContext(ProjectWindowContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useProjectWindows must be used within a ProjectWindowProvider\"\n    );\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAHA;;;;AA2BA,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAEvC;AAEK,SAAS;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAE3C,CAAC;IAEH,MAAM,qBAAqB,CAAC;QAC1B,eAAe,CAAC;YACd,MAAM,aAAa;gBAAE,GAAG,IAAI;YAAC;YAC7B,OAAO,UAAU,CAAC,SAAS;YAC3B,OAAO;QACT;IACF;IAEA,qBACE;kBAEG,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,UAAU,WAAW,iBACtD,8OAAC,mIAAA,CAAA,UAAa;gBAEZ,SAAS,WAAW,OAAO;gBAC3B,SAAS,IAAM,mBAAmB;eAF7B;;;;;;AAOf;AAEO,SAAS,6BAA6B,EAC3C,QAAQ,EAGT;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAE3C,CAAC;IAEH,MAAM,oBAAoB,CAAC;QACzB,MAAM,WAAW,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE;QAC1C,eAAe,CAAC,OAAS,CAAC;gBACxB,GAAG,IAAI;gBACP,CAAC,SAAS,EAAE;oBAAE;oBAAS,UAAU;gBAAK;YACxC,CAAC;IACH;IAEA,MAAM,qBAAqB,CAAC;QAC1B,eAAe,CAAC;YACd,MAAM,aAAa;gBAAE,GAAG,IAAI;YAAC;YAC7B,OAAO,UAAU,CAAC,SAAS;YAC3B,OAAO;QACT;IACF;IAEA,qBACE,8OAAC,qBAAqB,QAAQ;QAC5B,OAAO;YAAE;YAAmB;YAAoB;QAAY;;YAE3D;YAEA,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,UAAU,WAAW,iBACtD,8OAAC,mIAAA,CAAA,UAAa;oBAEZ,SAAS,WAAW,OAAO;oBAC3B,SAAS,IAAM,mBAAmB;mBAF7B;;;;;;;;;;;AAOf;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT","debugId":null}}]
}